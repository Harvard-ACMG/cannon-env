###############################################################################
# gchp.rocky+intel23.minimal.env
#
# Environment file for GCClassic + Rocky Linux + Intel2023
#
# Does not include any Spack-built modules, only FASRC-built modules.
# Useful for running in the Cannon queues, or to start fresh Spack builds.
###############################################################################

# Display message (if we are in a terminal window)
if [[ $- = *i* ]] ; then
  echo "Loading modules for GCHP, please wait ..."
fi

#==============================================================================
# Unload all previously-unloaded software
#==============================================================================

# Unload packages loaded with "module load"
module purge

# Unload packages loaded with "spack load"
if [[ "x${SPACK_ROOT}" != "x" ]]; then
    which spack &> /dev/null || spack unload --all
fi

#==============================================================================
# Load FASRC-built software packages for Rocky Linux and GNU 10.2.0
#==============================================================================
if [[ $- = *i* ]] ; then
  echo "... Loading FASRC-built software, please wait ..."
fi

# Load FASRC-built modules
module load intel/23.0.0-fasrc01           # icc / i++ / gfortran
module load intelmpi/2021.8.0-fasrc01      # MPI
module load netcdf-fortran/4.6.0-fasrc03   # netCDF-Fortran
module load flex/2.6.4-fasrc01             # Flex lexer (needed for KPP)
module load cmake/3.25.2-fasrc01           # CMake (needed to compile)

# Additional FASRC-built modules
# Uncomment if you need to use these
#module load IDL/8.7.2-fasrc01               # IDL language (needed for GAMAP)
##module load R/4.2.2-fasrc01                # R language
##module load matlab/R2022b-fasrc01          # matlab language

#==============================================================================
# Environment variables and related settings
# (NOTE: Lmod will define <module>_HOME variables for each loaded module
#==============================================================================

# Make all files world-readable by default
umask 022

# MPI
export MPI_ROOT="${MPI_HOME}"

# Specify compilers
export CC="icx"
export CXX="icx"
export FC="ifort"
export F77="${FC}"

# netCDF
if [[ "x${NETCDF_HOME}" == "x" ]]; then
   export NETCDF_HOME="${NETCDF_C_HOME}"
fi
export NETCDF_ROOT="${NETCDF_HOME}"
export NETCDF_FORTRAN_ROOT="${NETCDF_FORTRAN_HOME}"

# For ESMF
export ESMF_COMPILER="intel"
export ESMF_COMM="intelmpi"
export ESMF_DIR="/n/jacob_lab/Lab/seasfs01/Lab/RockyLinux/ESMF/ESMF_8_1_1"
export ESMF_INSTALL_PREFIX="${ESMF_DIR}/INSTALL_intel23_intelmpi2020"
unset ESMF_F90COMPILEOPTS  # For GNU compilers only

# For GCHP
export ESMF_ROOT="${ESMF_INSTALL_PREFIX}"

#==============================================================================
# Set limits
#==============================================================================

ulimit -l unlimited              # memorylocked
ulimit -u 50000                  # maxproc
ulimit -v unlimited              # vmemoryuse
ulimit -s unlimited              # stacksize

#==============================================================================
# Print information
#==============================================================================

module list
echo ""
echo "Environment:"
echo ""
echo "CC                  : ${CC}"
echo "CXX                 : ${CXX}"
echo "FC                  : ${FC}"
echo "ESMF_COMM           : ${ESMF_COMM}"
echo "ESMF_COMPILER       : ${ESMF_COMPILER}"
echo "ESMF_DIR            : ${ESMF_DIR}"
echo "ESMF_INSTALL_PREFIX : ${ESMF_INSTALL_PREFIX}"
echo "ESMF_ROOT           : ${ESMF_ROOT}"
echo "KPP_FLEX_LIB_DIR    : ${KPP_FLEX_LIB_DIR}"
echo "MPI_HOME            : ${MPI_HOME}"
echo "NETCDF_HOME         : ${NETCDF_HOME}"
echo "NETCDF_FORTRAN_HOME : ${NETCDF_FORTRAN_HOME}"
echo ""
echo "Done sourcing ${BASH_SOURCE[0]}"
