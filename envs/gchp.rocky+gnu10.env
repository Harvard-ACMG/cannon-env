#==============================================================================
# gchp.rocky+gnu10.env
#
# Environment file for GEOS-Chem Classic, on Rocky Linux with
# GNU Compiler Collection 10.2.0
#==============================================================================

# Print if interactive shell
if [[ $- = *i* ]] ; then
  echo "Loading modules for GCHP, please wait ..."
fi

#==============================================================================
# Software modules for Rocky Linux and GNU 10.2.0
#=====================q=========================================================

# Load FASRC-built modules
module purge
module load gcc/10.2.0-fasrc01
module load openmpi/4.1.0-fasrc01
module load netcdf-fortran/4.5.3-fasrc01
module load flex/2.6.4-fasrc01
module load cmake/3.25.2-fasrc01

# Setup the Spack environment if it has not been done yet
# Do this after the FASRC modules, which sets the MODULEPATH
if [[ "x${SPACK_ROOT}" == "x" ]]; then
   . /n/jacob_lab/Lab/seasfs01/Lab/RockyLinux/spack/share/spack/setup-env.sh
fi

# Also update the modulepath if we have not done it yet
# This is so Lmod can find Spack-generated modulefiles
if [[ ! "spack" =~ "${MODULEPATH}" ]]; then
   export SPACK_MODULE_ROOT="${SPACK_ROOT}/share/spack/lmod/linux-rocky8-x86_64"
   export MODULEPATH="${MODULEPATH}:${SPACK_MODULE_ROOT}/gcc/10.2.0"
   export MODULEPATH="${MODULEPATH}:${SPACK_MODULE_ROOT}/gcc/12.2.0"
fi

# Load Spack-built modules
module load colordiff/1.0.21-gcc-12.2.0
module load readline/8.2-gcc-10.2.0
module load ncurses/6.4-gcc-10.2.0
module load gdb/8.2.19-gcc-10.2.0
module load cgdb/0.7.1-gcc-10.2.0
module load openssh/8.0p1-gcc-10.2.0
module load nco/5.1.4-gcc-10.2.0
spack  load cdo@2.1.0

#==============================================================================
# Environment variables
# NOTE: <module>_HOME env vars are defined for each loaded <module>
#==============================================================================

# Make all files world-readable by default
umask 022

# Compilers
export CC=gcc
export CXX=g++
export FC=gfortran
export F77=${FC}

# MPI
export MPI_ROOT=${MPI_HOME}

# ESMF
export ESMF_COMPILER=gfortran
export ESMF_COMM=openmpi
export ESMF_DIR=/n/jacob_lab/Lab/seasfs01/Lab/RockyLinux/ESMF/ESMF_8_1_1
export ESMF_INSTALL_PREFIX=${ESMF_DIR}/INSTALL_gfortran10_openmpi4
export ESMF_ROOT=${ESMF_INSTALL_PREFIX}
#---------------------------------------------------------------------------
# ESMF does not build with GCC10 without the following work-around
# for a type mismatch error (https://trac.macports.org/ticket/60954)
export ESMF_F90COMPILEOPTS="-fallow-argument-mismatch -fallow-invalid-boz"
#---------------------------------------------------------------------------

# KPP 3.0.0+
export KPP_FLEX_LIB_DIR=${FLEX_HOME}/lib64

#==============================================================================
# Set limits
#==============================================================================

ulimit -c unlimited   # coredumpsize
ulimit -u 50000       # maxproc
ulimit -v unlimited   # vmemoryuse
ulimit -s unlimited   # stacksize

#==============================================================================
# Print information
#==============================================================================

module list

echo ""
echo "Environment:"
echo ""
echo "CC                  : ${CC}"
echo "CXX                 : ${CXX}"
echo "FC                  : ${FC}"
echo "ESMF_COMM           : ${ESMF_COMM}"
echo "ESMF_COMPILER       : ${ESMF_COMPILER}"
echo "ESMF_DIR            : ${ESMF_DIR}"
echo "ESMF_INSTALL_PREFIX : ${ESMF_INSTALL_PREFIX}"
echo "ESMF_ROOT           : ${ESMF_ROOT}"
echo "KPP_FLEX_LIB_DIR    : ${KPP_FLEX_LIB_DIR}"
echo "MPI_HOME            : ${MPI_HOME}"
echo "NETCDF_HOME         : ${NETCDF_HOME}"
echo "NETCDF_FORTRAN_HOME : ${NETCDF_FORTRAN_HOME}"
echo ""
echo "Done sourcing ${BASH_SOURCE[0]}"
